{"version":3,"sources":["config.js","utils.js","RateableUsers.js","Slider.js","RatingSlider.js","RatingForm.js","NewRatingPanel.js","RatingsTable.js","ViewRatingPanel.js","TeamRate.js","AxisEditor.js","AxisPanel.js","App.js","index.js"],"names":["config","apiServer","postPromise","url","data","console","info","concat","axios","post","withCredentials","body","onSuccess","onError","then","result","status","error","statusText","catch","err","getUrlPromise","get","getUrl","action","isCancelled","debug","Proxy","target","name","receiver","toString","RateableUsers","_ref","ratee","onSelection","val","log","people","sortedPeople","slice","sort","a","b","_jsxs","value","email","disabled","undefined","required","onChange","event","find","user","children","_jsx","map","item","Connector","className","x","labelX","trackY","joinY","labelY","onClick","_Fragment","d","cx","cy","Track","_ref2","trackWidth","y","x1","y1","x2","y2","doNothing","Slider","_ref3","labelWidth","ref","bounds","useMeasure","datasetNames","Object","keys","filter","datasetName","Array","isArray","datasets","values","dataset","point","width","height","length","trackMargin","rowHeight","trackRow","Math","ceil","percentToX","percent","xToPercent","min","max","halfLabelWidth","centers","dataSet","_ref4","desiredCenter","size","labelMargin","anchorSpans","removeOverlapInOneDimension","newCenters","selectedX","rowToY","row","tabIndex","style","padding","margin","onKeyDown","evt","currentValue","key","floor","overflow","viewBox","tagName","dim","getBoundingClientRect","clientX","left","onMouseMove","buttons","j","aboveTrack","step","lastEnd","lastPoint","_ref5","i","label","_ref6","position","top","bottom","String","RatingSlider","rating","otherRatings","axis","onAfterChange","editor","axisId","id","findScore","ratings","score","Number","refPoints","referencePoints","description","previousRatings","reduce","oldRating","oldScore","rater","Date","dateTime","toLocaleDateString","permissions","anchor","commentTemplate","responseCommentTemplate","RatingForm","onSubmit","setDirty","ratingState","modifyRating","useImmer","groupedAxes","setGroupedAxes","useState","changedCategories","modifyChangedCategories","useEffect","cancelled","draft","axesLoad","push","response","ratedAxisIds","join","Promise","all","activeAxes","scoredAxes","visualisedAxes","axisData1","arguments","axisData2","TypeError","contains","Set","has","mergeAxes","entries","collection","groupAssigner","group","category","mainView","headerSection","toLocaleString","comment","preExpanded","commentLabel","commentSection","commentName","writeable","hasContent","placeholder","comments","canShare","shareWithRatee","canDeactivate","active","canAck","acknowledgedByRatee","canEdit","some","Accordion","allowMultipleExpanded","allowZeroExpanded","replace","axes","AccordionItem","uuid","AccordionItemHeading","AccordionItemButton","AccordionItemPanel","currentIndex","findIndex","element","splice","renderAxis","type","checked","marginRight","CHOOSE","RATING","SUBMITTING","SUBMITTED","NewRatingPanel","internalSetRatee","internalSetStatus","setStatus","useCallback","newStatus","setRatee","r","window","confirm","ratingData","rateeComment","alert","selectors","Data","Selectors","BoolFormatter","columns","formatter","resizable","filterable","handleFilterChange","filters","newFilters","filterTerm","column","RatingsTable","onSelect","selectedRating","setFilters","filteredRows","rows","getRows","selectedIdx","indexOf","AutoSizer","ReactDataGrid","rowGetter","rowsCount","toolbar","Toolbar","enableFilter","onAddFilter","onClearFilters","minHeight","rowSelection","showCheckbox","enableShiftSelect","onRowsSelected","onRowsDeselected","selectBy","indexes","ViewRatingPanel","viewableRatings","setViewableRatings","setSelectedRating","dirty","setLocalDirty","refreshCount","_forceRefresh","internalSetDirty","newDirtyState","splitterChildren","p","SplitterLayout","vertical","primaryIndex","secondaryMinSize","primaryMinSize","secondaryInitialSize","TeamRate","me","quarterlyRatings","setQuarterlyRatings","submitted","setSubmitted","refresh","forceRefresh","now","since","getFullYear","getMonth","getTime","isDirty","isLoading","myTeam","person","team","mostRecentRating","acc","select","string","substring","toUpperCase","toLowerCase","toDateString","manager","AxisEditor","axisData","setAxisData","setValue","rateableUsers","setRateableUsers","audienceInput","useRef","users","inUseGroups","from","flatMap","groups","htmlFor","defaultValue","defaultChecked","audience","current","newValue","round","readOnly","refPoint","lookupValue","index","AxisPanel","setAxes","selectedAxis","setSelectedAxis","App","setMe","setPeople","setIsDirty","_err","unloadListener","preventDefault","returnValue","addEventListener","capture","removeEventListener","href","Tabs","_index","_lastIndex","_event","TabList","Tab","TabPanel","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06a73a55.chunk.js","sourcesContent":["export const config = {\n    apiServer: \"\"\n}","import axios from \"axios\"\nimport {config} from \"./config.js\"\n\nexport function postPromise(url, data) {\n    const apiServer = config.apiServer\n    console.info(`> Posting data to ${apiServer}${url}`, data)\n\n    return axios.post(`${apiServer}${url}`, data,{withCredentials: true})\n}\n\nexport function wordToTitleCase(string) {\n    return string.substring(0, 1).toUpperCase() + string.substring(1).toLowerCase()\n}\n\nexport function post(url, body, onSuccess, onError) {\n    postPromise(url, body).then(result => {\n            if (result.status !== 200) {\n                console.error(`Request for ${url} failed with status ${result.status} ${result.statusText}.`)\n                throw result.data\n            }\n            onSuccess(result.data)\n        }).catch(err => {\n            console.error(err)\n            onError(err)\n        })\n}\n\nexport function getUrlPromise(url) {\n    const apiServer = config.apiServer\n\n    console.info(`> Getting ${apiServer}${url}`)\n    return axios.get(`${apiServer}${url}`, {withCredentials: true})\n}\n\nexport function getUrl(url, action, onError) {\n    let isCancelled = false\n    getUrlPromise(url)\n        .then(result => {\n            if (!isCancelled) {\n                console.debug(\"< RESPONSE\", url, result)\n                if (result.status !== 200) {\n                    console.error(`Request for ${url} failed with status ${result.status} ${result.statusText}.`)\n                    throw result.data\n                }\n                action(result.data)\n            }\n        })\n        .catch(onError)\n\n    return () => {isCancelled = true}\n}\n\nexport function cancellableGet(url, action) {\n    return () => getUrl(url, action)\n}\n\nexport function log(arg) {\n    console.log(arg);\n    return arg\n}\n\nexport function group(collection, groupAssigner) {\n    const result = {}\n    for (let item of collection) {\n        const group = groupAssigner(item)\n        if (result[group] === undefined) {\n            result[group] = []\n        }\n        result[group].push(item)\n    }\n    return result\n}\n\nexport const status = new Proxy({}, {\n    get: (target, name, receiver) => ({\n        name,\n        toString: () => `status: ${name}`\n    })\n})","import React from \"react\"\n\nexport default function RateableUsers({ratee, onSelection = (val) => console.log(val), people}) {\n    const sortedPeople = people.slice().sort((a,b) => (a.name > b.name) ? 1 : -1)\n    return (\n        <select value={(ratee && ratee.email) || \"\"}\n                disabled={ratee !== undefined}\n                required={true}\n                onChange={(event) => onSelection(sortedPeople.find((user) => user.email === event.target.value))}>\n            <option key={'null'} value={\"\"}>Choose someone to rate...</option>\n            {sortedPeople.map(item => (\n                <option key={item.email} value={item.email}>\n                    {item.name}\n                </option>\n            ))}\n        </select>\n    )\n}","import React from 'react'\nimport {removeOverlapInOneDimension} from \"webcola\"\nimport useMeasure from 'react-use-measure'\n\nimport \"./Slider.css\"\n\nconst trackMargin = 8\nconst defaultDatasetHeight = 90\nconst initialWidth = 900\nconst labelMargin = 2\nconst joinAdjust = 4\n\nconst Connector = ({className, x, labelX, trackY, joinY, labelY, onClick}) => <>\n    <path onClick={onClick} className={`line ${className}`} d={`M${x} ${trackY} V${joinY} H${labelX} V${labelY}`}/>\n    <circle onClick={onClick} className={`point ${className}`} cx={x} cy={trackY}/>\n</>\n\nconst Track = ({className = \"\", trackWidth, y}) => <line\n    className={`track ${className}`}\n    x1={trackMargin} y1={y}\n    x2={trackWidth + trackMargin} y2={y}\n/>\n\nconst doNothing = () => {}\n\n/**\n * A slider suited to displaying multiple datasets as well as selection of a value.\n *\n * @example\n * ```\n *      Slider({\n *          labelWidth: 100,\n *          data: {\"dataset-name\": [{point: 20, label: \"points in percent\"}, {point:40, label: \"other point\"}]},\n *          disabled: false,\n *          value: 20,\n *          onChange: (value, oldValue) => {}\n *      })\n * ```\n *\n * @param props {labelWidth: number, data: {}, disabled: boolean, value: number, onChange: function } The props for this slider\n */\nexport const Slider = ({labelWidth = 115, data = {}, disabled = false, value = undefined, onChange = doNothing}) => {\n    const [ref, bounds] = useMeasure()\n    const datasetNames = Object.keys(data).filter(datasetName => Array.isArray(data[datasetName]))\n    const datasets = Object.values(data).filter(dataset => Array.isArray(dataset)).map(dataset => dataset.sort((a, b) => a.point - b.point))\n    const width = bounds.width === 0 ? initialWidth : bounds.width\n    const height = bounds.height === 0 ? datasets.length * defaultDatasetHeight : bounds.height\n    const trackWidth = width - trackMargin * 2\n    const rowHeight = (height - trackMargin) / datasets.length\n    const trackRow = Math.ceil(datasets.length / 2)\n    const trackY = rowHeight * trackRow\n    const percentToX = percent => trackWidth * percent / 100 + trackMargin\n    const xToPercent = x => Math.min(100, Math.max(0, (x - trackMargin) * 100/ trackWidth))\n    const halfLabelWidth = labelWidth / 2\n    const centers = datasets.map(dataSet => dataSet\n        .map(({point}) => ({desiredCenter:percentToX(point), size: labelWidth + labelMargin * 2})))\n        .map(anchorSpans => anchorSpans.length > 0 ? removeOverlapInOneDimension(anchorSpans, trackMargin, width - trackMargin).newCenters : anchorSpans)\n    const selectedX = (value !== undefined && value !== null) ? percentToX(value) : undefined\n\n    const rowToY = (row) => (row >= trackRow) ? rowHeight * (row + 1) : rowHeight * row\n\n    return <div ref={ref} tabIndex={0} className={`Rating ${disabled ? 'disabled' : 'enabled'}`} style={{padding: 0, margin: 0}}\n        onKeyDown={(evt) => {\n            if (disabled) return\n            const currentValue = value === undefined ? 0 : value\n            if (evt.key === \"ArrowRight\") {\n                onChange(Math.min(100, Math.ceil(currentValue) + 1), value)\n            } else if (evt.key === \"ArrowLeft\") {\n                onChange(Math.max(0, Math.floor(currentValue) - 1), value)\n            }\n        }}\n    >\n        <div style={{height: height, overflow: 'hidden', padding: 0, margin: 0}}>\n        <svg style={{padding: 0, margin: 0}} viewBox={`0 0 ${width} ${height}`} width={width} height={height}\n             onClick={evt => {\n                 if (disabled) return\n                 if (evt.target.tagName === \"svg\") {\n                     const dim = evt.target.getBoundingClientRect()\n                     onChange(xToPercent(evt.clientX - dim.left), value)\n                 }\n             }}\n             onMouseMove={(evt) => {\n                 if (disabled) return\n                 const target = evt.target\n                 if (target.tagName === 'svg' && evt.buttons > 0) {\n                     const dim = target.getBoundingClientRect()\n                     onChange(xToPercent(evt.clientX - dim.left), value)\n                 }\n             }}\n            >\n            <Track trackWidth={trackWidth} y={trackY} />\n            {value !== undefined ? <Track className={\"selected\"} trackWidth={selectedX - trackMargin} y={trackY} /> : null}\n            {datasets.map((dataset, j) => {\n                    const aboveTrack = j < trackRow\n                    let step = 0\n                    let lastEnd = -1000\n                    let lastPoint = -1\n                    return dataset.map(({point, label}, i) => {\n                            const x = percentToX(point)\n                            const labelX = centers[j][i]\n                            if (lastEnd + labelWidth < labelX) {\n                                step = 0\n                            } else if (point === lastPoint) {\n                                // don't do anything\n                            } else if (labelX > x){\n                                step++\n                            } else {\n                                step--\n                            }\n                            lastEnd = centers[j][i] + halfLabelWidth\n                            lastPoint = point\n\n                            let y = rowToY(j)\n                            let joinY = (step * joinAdjust + rowHeight * 2 / 3) * (aboveTrack ? 1 : -1) + y\n                            return <Connector key={\"key-\"+j+'-'+i} onClick={() => !disabled && onChange(point, value)} className={`datapoint ${datasetNames[j]} ${point === value ? \"selected\" : \"not-selected\"}`} x={x} labelX={labelX} trackY={trackY} joinY={joinY} labelY={y} />\n                        }\n                )})\n            }\n            {value !== undefined ? <circle className=\"point selected\" cx={selectedX} cy={trackY} onClick={() => !disabled && onChange(undefined, value)}/> : null}\n        </svg>\n        {datasets.map((dataset, j) => dataset.map(({point, label}, i) => {\n                const x = centers[j][i]\n                const aboveTrack = j < trackRow\n                const style = {position: \"absolute\", left: x - halfLabelWidth, width: labelWidth}\n                if (aboveTrack) {\n                    style.top = rowToY(j)\n                } else {\n                    style.bottom = height - rowToY(j)\n                }\n                return <div\n                    key={String(point)+\"-\"+label}\n                    className={`datapoint label ${datasetNames[j]} ${point === value ? \"selected\" : \"not-selected\"}`}\n                    style={style}\n                    onClick={() => {\n                        if (disabled) return\n                        onChange(point, value)\n                    }}\n                >{label}</div>\n            }))\n        }</div>\n    </div>\n}","import \"./RatingSlider.css\"\nimport {Slider} from \"./Slider\"\n\nexport default function RatingSlider({rating, otherRatings, axis, value, onAfterChange = () => {}, editor=false}) {\n    const axisId = axis.id\n    function findScore(rating) {\n        if (!rating || !rating.ratings) {\n            return undefined\n        }\n        const result = rating.ratings.find(({axis, score}) => Number(axis) === Number(axisId))\n        return result ? Number(result.score) : undefined\n    }\n\n    const refPoints = axis.referencePoints.map(({rating, description}) => ({point:rating, label:description}))\n\n    // [{point, label}]\n    const previousRatings = otherRatings ? otherRatings.reduce((result, oldRating) => {\n        const oldScore = findScore(oldRating)\n        if (oldScore !== undefined && oldRating.ratee === rating.ratee) {\n            return [...result, {point: oldScore, label: `${oldRating.rater} ${new Date(Number(oldRating.dateTime)).toLocaleDateString(\"en-gb\")}`}]\n        } else {\n            return result\n        }\n    }, []) : undefined\n\n    return <div className=\"RatingSlider\">\n        {axis.name}\n        <p className=\"axisDescription\">{axis.description}</p>\n        <Slider disabled={rating && rating.permissions && !rating.permissions.ratings}\n                data={{anchor:refPoints, previousRatings}}\n                value={value !== undefined ? value : findScore(rating)}\n                onChange={onAfterChange}\n        />\n    </div>\n}","import React, {useState, useEffect} from \"react\"\nimport {getUrlPromise, group} from \"./utils\"\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemButton, AccordionItemHeading,\n    AccordionItemPanel\n} from \"react-accessible-accordion\"\nimport {useImmer} from \"use-immer\"\nimport \"./RatingForm.css\"\nimport RatingSlider from \"./RatingSlider\"\n\nconst commentTemplate = `Hints:\n What are this persons strengths?\n How have they improved most recently?\n Where could they improve next?\n Summary for 2021\n Any other feedback?\n \n`\n\nconst responseCommentTemplate = \"# Thoughts\\n\\n\\nAgree / Disagree\";\n\nfunction mergeAxes(axisData1 = [], axisData2 = []) {\n    if (!Array.isArray(axisData1)) {\n        console.error(\"axisData1 must be an array\", axisData1)\n        throw new TypeError(\"axisData1 must be an array\")\n    }\n\n    const contains = new Set(axisData1.map(a => a.id))\n    const result = axisData1.slice()\n    for (const axis of axisData2) {\n        if (!contains.has(axis.id)) {\n            result.push(axis)\n        }\n    }\n    return result\n}\n\nfunction renderAxis(category, axis, ratingState, modifyRating, modifyChangedCategories, ratee, setDirty, otherRatings) {\n    // const level = ratee.level\n    // const expectedMin = level > 200 ? 10*((level / 100) - 2) : (level / 20)\n    // const expectedMax = expectedMin + (level > 200 ? 25 : 15)\n    // const scoreRecord = ratingState.ratings.find(({a, s}) => Number(a) === Number(axis.id))\n\n    // this bit isn't done yet, because it needs to be recalculated when the ratingState changes\n    // It should probably be pulled out into its own component.\n    const isUnusuallyPoor = false // scoreRecord && (scoreRecord.score < expectedMin)\n    const isUnusuallyGood = false // scoreRecord && (scoreRecord.score > expectedMax)\n\n    return <section className={\"rating\"} key={`axis-${axis.id}`}>\n        <RatingSlider axis={axis} rating={ratingState} otherRatings={otherRatings} onAfterChange={(score) => {\n                    setDirty(true)\n                    modifyRating(draft =>  {\n                        if (!draft.ratings) {\n                            draft.ratings = []\n                        }\n                        const currentIndex = draft.ratings.findIndex(element => Number(element.axis) === Number(axis.id))\n                        if (currentIndex >= 0) {\n                            if (score > 0) {\n                                draft.ratings[currentIndex].score = score\n                            } else{\n                                draft.ratings.splice(currentIndex, 1)\n                            }\n                        } else {\n                            if (score > 0) {\n                                draft.ratings.push({axis: axis.id, score})\n                            }\n                        }\n                    })\n                    modifyChangedCategories(draft => {draft[category] = true})\n                }}\n        />\n        {isUnusuallyPoor ? <span className=\"outOfRangeMessage good\">This is unusually poor for someone of this level</span> : <></>}\n        {isUnusuallyGood ? <span className=\"outOfRangeMessage poor\">This is unusually good for someone of this level. Should they be promoted?</span> : <></>}\n    </section>\n}\n\nexport default function RatingForm({rating, otherRatings, onSubmit, setDirty = () => {}, ratee}) {\n    const [ratingState, modifyRating] = useImmer(undefined)\n    const [groupedAxes, setGroupedAxes] = useState(undefined)\n    const [changedCategories, modifyChangedCategories] = useImmer({})\n\n    useEffect(() => {\n        let cancelled = false\n        modifyRating(draft => rating)\n        modifyChangedCategories(draft => ({}))\n        setGroupedAxes(undefined)\n\n        const axesLoad = []\n\n        if (!rating.permissions || rating.permissions.ratings) {\n            axesLoad.push(getUrlPromise(`api/v1/axes?for=${rating.ratee}`).then(response => response.data))\n        }\n        if (rating.ratings) {\n            const ratedAxisIds = rating.ratings.map(({axis, score}) => axis)\n            if (ratedAxisIds.length > 0) {\n                axesLoad.push(getUrlPromise(`api/v1/axes/${ratedAxisIds.join(\",\")}`).then(response => response.data))\n            }\n        }\n\n        Promise.all(axesLoad).then(([activeAxes, scoredAxes]) => {\n            if (cancelled) {return}\n            const visualisedAxes = mergeAxes(activeAxes, scoredAxes)\n            setGroupedAxes(Object.entries(group(visualisedAxes, (axis) => axis.category)))\n        })\n\n        return () => {cancelled = true}\n    }, [rating, modifyRating, modifyChangedCategories, setGroupedAxes])\n\n    let mainView = <p>loading...</p>\n\n    if (groupedAxes) {\n        let headerSection = (ratingState && ratingState.dateTime) ? <section className=\"ratingDescription\">\n            Rating for {ratingState.ratee} given by {ratingState.rater} at {new Date(Number(ratingState.dateTime)).toLocaleString()}\n        </section> : <></>\n\n        if (ratingState.comment === undefined) {\n            modifyRating(draft => {draft.comment = commentTemplate})\n        }\n\n        const preExpanded = groupedAxes.length > 0 ? [groupedAxes[0][0]] : []\n        const commentLabel = {\"comment\": \"Raters Comment\", \"lmComment\": \"Line Managers Comment\", \"rateeComment\": \"Ratee Comment\"}\n        const commentSection = (ratingState ? [\"comment\", \"lmComment\", \"rateeComment\"].map(commentName => {\n            const writeable = (ratingState.permissions && ratingState.permissions[commentName]) || (commentName === \"comment\" && !ratingState.permissions)\n            const hasContent = ratingState[commentName] !== undefined\n            if (writeable || hasContent) {\n                return <section key={`comment-${commentName}`}>\n                    <p>{commentLabel[commentName]}</p>\n                    <textarea disabled={!writeable}\n                              placeholder={commentName === \"rateeComment\" ? responseCommentTemplate : commentTemplate}\n                              value={ratingState[commentName]}\n                              onChange={(event) => {\n                                setDirty(true)\n                                modifyRating(draft => {draft[commentName] = event.target.value})\n                                modifyChangedCategories(draft => {draft.comments = true})\n                              }}>\n                    </textarea>\n                </section>\n            } else {\n                return <div key={`comment-${commentName}`}></div>\n            }\n        }) : <></>)\n\n        const canShare = (ratingState.permissions && ratingState.permissions.shareWithRatee) || !ratingState.permissions\n        const canDeactivate = ratingState.permissions && ratingState.permissions.active\n        const canAck = ratingState.permissions && ratingState.permissions.acknowledgedByRatee\n        const canEdit = (ratingState.permissions === undefined) || (Object.values(ratingState.permissions).some(x => x))\n\n        mainView = <div className=\"ratingBody\" key={\"id\" in rating ? rating.id : \"new-rating\"}>\n            {headerSection}\n\n            <div className=\"ratingScoresAndComments\">\n                <Accordion className=\"ratingScores\"\n                           allowMultipleExpanded={false}\n                           allowZeroExpanded={true}\n                           preExpanded={preExpanded.map(a => a.replace(/\\s/g, \"-\"))}>\n                    {groupedAxes.map(([category, axes]) => (\n                        <AccordionItem key={category} uuid={category.replace(/\\s/g, \"-\")}>\n                            <AccordionItemHeading className={changedCategories[category] ? \"modified\" : \"unmodified\"}>\n                                <AccordionItemButton>{category}</AccordionItemButton>\n                            </AccordionItemHeading>\n                            <AccordionItemPanel>\n                                {axes.map((axis) => renderAxis(category, axis, ratingState, modifyRating, modifyChangedCategories, ratee, setDirty, otherRatings))}\n                            </AccordionItemPanel>\n                        </AccordionItem>\n                    ))}\n                </Accordion>\n                <div className=\"ratingComments\">\n                    {commentSection}\n                </div>\n            </div>\n\n            <section className=\"ratingFooter\">\n                Share With {rating.ratee}: <input type=\"checkbox\" onChange={event => modifyRating(draft => {\n                    setDirty(true)\n                    draft.shareWithRatee = (event.target.checked)\n                })} disabled={!canShare} style={{marginRight: 50}} checked={ratingState.shareWithRatee === true} />\n\n                {canDeactivate ? <>\n                    Active: <input type=\"checkbox\" onChange={event => modifyRating(draft => {\n                        setDirty(true)\n                        draft.active = (event.target.checked)\n                    })} style={{marginRight: 50}} checked={ratingState.active === true} />\n                </>: <></>}\n\n                {(canAck || (ratingState.permissions && ratingState.permissions.acknowledgedByRatee)) ? <>\n                    Acknowledged: <input type=\"checkbox\" onChange={event => modifyRating(draft => {\n                    setDirty(true)\n                    draft.acknowledgedByRatee = (event.target.checked)\n                })} style={{marginRight: 50}} checked={ratingState.acknowledgedByRatee === true} />\n                </>: <></>}\n\n                {onSubmit? <button disabled={!canEdit} onClick={() => onSubmit(ratingState)}>Submit Rating</button> : <></>}\n            </section>\n        </div>\n    }\n\n    return mainView\n}\n","import RateableUsers from \"./RateableUsers\"\nimport RatingForm from \"./RatingForm\"\nimport React, {useCallback, useState} from \"react\"\nimport \"./NewRatingPanel.css\"\nimport {post, status} from \"./utils\";\n\nconst {CHOOSE, RATING, SUBMITTING, SUBMITTED} = status\n\nconst NewRatingPanel = ({setDirty = () => {}, people}) => {\n    let [ratee, internalSetRatee] = useState(undefined)\n    let [status, internalSetStatus] = useState(CHOOSE)\n\n    const setStatus = useCallback((newStatus) => {\n        if (newStatus === status) {\n            return\n        }\n        if (status !== RATING && newStatus === RATING) {\n            setDirty(true)\n        } else {\n            setDirty(false)\n        }\n        console.log('setting the status', status, '=>', newStatus)\n        internalSetStatus(newStatus)\n    }, [status, setDirty, internalSetStatus])\n\n    const setRatee = (r) => {\n        const newStatus = r === undefined ? CHOOSE : RATING\n        setStatus(newStatus)\n        internalSetRatee(r)\n    }\n\n    return <div className=\"NewRatingPanel\">\n        <div className=\"ratingSelect\">Rate&nbsp;\n            <RateableUsers ratee={ratee} people={people} onSelection={setRatee}/>&nbsp;\n            {(status === RATING || status === SUBMITTED) ? <button onClick={() => {\n                if (status === RATING && !window.confirm(\"Are you sure? This will discard your current rating.\")) {\n                    return false\n                }\n                setRatee(undefined)\n            }}>Rate Someone Else</button> : <></>}\n        </div>\n\n        <div className=\"newRatingDisplay\">\n            {status === RATING ? <RatingForm className=\"ratingBody\" ratee={ratee} rating={{ratee: ratee.email, ratings:[]}} onSubmit={(rating) => {\n                const ratingData = {\n                    ratee: ratee.email,\n                    shareWithRatee: false,\n                    rateeComment: null,\n                    active: true,\n                    ...rating\n                }\n                console.log(\"Submitting rating\", rating, ratingData)\n\n                post('api/v1/ratings', ratingData, () => setStatus(SUBMITTED), err => window.alert(\"Problem submitting your rating\"))\n                setStatus(SUBMITTING)\n            }} /> : <></>}\n\n            {(status === SUBMITTED || status === SUBMITTING) ? <div>\n                Thank you for submitting your rating.\n            </div> : <></>}\n        </div>\n    </div>\n}\n\nexport default NewRatingPanel","import React, {useState} from \"react\"\nimport 'rc-slider/assets/index.css'\nimport './RatingsTable.css'\nimport ReactDataGrid from 'react-data-grid'\nimport { Toolbar, Data } from \"react-data-grid-addons\"\nimport AutoSizer from 'react-virtualized-auto-sizer'\n\nconst selectors = Data.Selectors;\n\nconst BoolFormatter = ({value}) => value === true ? \"✔️\" : \"❌\"\nconst DateFormatter = ({value}) => new Date(Number(value)).toLocaleString(\"en-GB\")\n\nconst columns = [\n    {key: 'id', name: \"ID\", width: 40},\n    {key: 'dateTime', name: \"Date\", formatter: DateFormatter, width: 170, resizable: true},\n    {key: 'ratee', name: \"Ratee\", filterable: true},\n    {key: 'rater', name: \"Rater\", filterable: true},\n    {key: 'shareWithRatee', name: \"Shared With Ratee\", formatter: BoolFormatter, resizable: true, width: 160},\n    {key: 'acknowledgedByRatee', name: \"Acknowledged By Ratee\", formatter: BoolFormatter, resizable: true, width: 180},\n    {key: 'active', name: \"Active\", formatter: BoolFormatter, resizable: true, filterable: true, width: 80},\n    {key: 'rateesManager', name: \"Manager\", filterable: true}\n]\n\nconst handleFilterChange = filter => filters => {\n    const newFilters = { ...filters };\n    if (filter.filterTerm) {\n        newFilters[filter.column.key] = filter;\n    } else {\n        delete newFilters[filter.column.key];\n    }\n    return newFilters;\n};\n\nfunction getRows(rows, filters) {\n    return selectors.getRows({ rows, filters });\n}\nexport default function RatingsTable({ratings, onSelect, selectedRating}) {\n    const [filters, setFilters] = useState({})\n    const filteredRows = getRows(ratings, filters)\n    const selectedIdx = filteredRows.indexOf(selectedRating)\n\n    return  <AutoSizer style={{height: \"100%\", width: \"100%\", overflow: 'hidden'}}>\n        {({height, width}) => (\n            <ReactDataGrid\n                columns={columns}\n                rowGetter={i => filteredRows[i]}\n                rowsCount={filteredRows.length}\n                toolbar={<Toolbar enableFilter={true} />}\n                onAddFilter={filter => setFilters(handleFilterChange(filter))}\n                onClearFilters={() => setFilters({})}\n                minHeight={height - 50 /*sorry for the hardcoding*/}\n                rowSelection={{\n                    showCheckbox: true,\n                    enableShiftSelect: false,\n                    onRowsSelected: (rows) => onSelect(rows[0].row),\n                    onRowsDeselected: () => onSelect(undefined),\n                    selectBy: {indexes: selectedRating ? [selectedIdx] : []}\n                }}\n            />\n        )}\n    </AutoSizer>\n}\n","import RatingsTable from \"./RatingsTable\"\nimport RatingForm from \"./RatingForm\"\nimport {getUrl, post} from \"./utils\"\nimport React, {useEffect, useState} from 'react'\nimport SplitterLayout from 'react-splitter-layout';\nimport 'react-splitter-layout/lib/index.css';\n\nimport \"./ViewRatingPanel.css\"\n\nexport default function ViewRatingPanel({people, setDirty = () => {}}) {\n    const [viewableRatings, setViewableRatings] = useState(undefined)\n    const [selectedRating, setSelectedRating] = useState(undefined)\n    const [dirty, setLocalDirty] = useState(false)\n    const [refreshCount, _forceRefresh] = useState(0)\n\n    function internalSetDirty(newDirtyState) {\n        if (newDirtyState === dirty) {\n            return\n        }\n        setLocalDirty(newDirtyState)\n        setDirty(newDirtyState)\n    }\n\n    useEffect(() => getUrl('api/v1/ratings', setViewableRatings, err => window.alert(\"Problem getting the ratings from the API\")), [setViewableRatings, refreshCount])\n\n    const splitterChildren = [\n        <RatingsTable ratings={viewableRatings} onSelect={(rating) => {\n            if (dirty && !window.confirm(\"Discard this rating?\")) {\n                return\n            }\n            internalSetDirty(false)\n            setSelectedRating(rating)\n        }} selectedRating={selectedRating}/>\n    ]\n\n    if (selectedRating) {\n        splitterChildren.push(<div className=\"ratingView\">\n            <RatingForm rating={selectedRating} otherRatings={viewableRatings} ratee={people.find(p => p.email === selectedRating.ratee)} setDirty={internalSetDirty} onSubmit={(rating) => {\n                console.log(\"Submitting rating\", rating)\n\n                post(`api/v1/ratings/${rating.id}`, rating, result => {\n                    console.info(\"Submitted Rating\", result)\n                    internalSetDirty(false)\n                    _forceRefresh(refreshCount+1)\n                    setSelectedRating(undefined)\n                }, err => window.alert(\"Problem submitting rating to API, see developer console.\"))\n            }}/></div>)\n    }\n\n    return viewableRatings ? <SplitterLayout\n        vertical={true}\n        primaryIndex={1}\n        secondaryMinSize={200}\n        primaryMinSize={60}\n        secondaryInitialSize={200}\n    >\n        {splitterChildren}\n    </SplitterLayout> : <div>Loading ratings...</div>\n}","import \"./TeamRate.css\"\n\nimport {useState, useEffect} from \"react\"\nimport {getUrl, post, wordToTitleCase} from \"./utils\"\nimport RatingForm from \"./RatingForm\"\n\nexport default function TeamRate({me, people, setDirty = () => {}}) {\n    const [quarterlyRatings, setQuarterlyRatings] = useState(undefined)\n    const [selectedRating, setSelectedRating] = useState(undefined)\n    const [submitted, setSubmitted] = useState(false)\n    const [refresh, forceRefresh] = useState(0)\n\n    const now = new Date()\n    const since = new Date(now.getFullYear(), now.getMonth() - 4, 1).getTime()\n\n    let isDirty = false\n    const internalSetDirty = (newDirtyState) => {\n        if (newDirtyState !== isDirty) {\n            isDirty = newDirtyState\n            setDirty(newDirtyState)\n        }\n    }\n\n    useEffect(() => getUrl(`api/v1/ratings?rater=${me.email}&dateTime=gte(${since}.0)&active=true`, setQuarterlyRatings, (err) => window.alert(\"Problem getting recent ratings.\")), [setQuarterlyRatings, refresh, since, me.email])\n\n    const isLoading = quarterlyRatings === undefined || people === undefined\n\n    const myTeam = isLoading ? [] : people.filter(person => person.team === me.team)\n\n    if (isLoading) {\n        if (submitted !== false) {\n            setSubmitted(false)\n        }\n        return <p>loading...</p>\n    }\n\n    const mostRecentRating = quarterlyRatings.reduce((acc, rating) => {\n        return {...acc, [rating.ratee]: rating}\n    }, {})\n\n    const select = (rating) => () => {\n        if (isDirty && !window.confirm(\"Discard this rating?\")) {\n            return\n        }\n        internalSetDirty(false)\n        setSubmitted(false)\n        setSelectedRating(rating)\n    }\n\n    return <div className=\"TeamRate\">\n        <div className=\"RatingsTable\">\n            Ratings for {wordToTitleCase(me.team)} team since {new Date(since).toDateString()}.\n            <table>\n                <thead>\n                    <tr><th>Name</th><th>Email</th><th>Manager</th><th>Rated?</th><th> </th></tr>\n                </thead>\n                <tbody>\n                {myTeam.map(person => {\n                    const rating = mostRecentRating[person.email]\n                    return <tr key={person.name} className={rating ? \"teammate rated\" : \"teammate unrated\"}>\n                        <td>{person.name}</td>\n                        <td>{person.email}</td>\n                        <td>{person.manager}</td>\n                        <td>{rating ? \"✔️\" : \"❌\"}</td>\n                        <td>{rating ? <button onClick={select(rating)}>Rated</button>\n                                    : <button onClick={select({ratee: person.email, ratings: []})}>{person.email === me.email ? \"Rate yourself\" : \"Still To Rate\"}</button>\n                        }</td>\n                    </tr>\n                })}\n                </tbody>\n            </table>\n        </div>\n        {selectedRating && <div className=\"ratingView\">\n            {submitted ? <p>Thank you for submitting your rating for {selectedRating.ratee}.</p> :\n            <RatingForm ratee={people.find(p => p.email === selectedRating.ratee)} rating={selectedRating} setDirty={internalSetDirty} onSubmit={(rating) => {\n                console.log(\"Submitting rating\", rating)\n\n                post(`api/v1/ratings${rating.id ? (\"/\"+rating.id) : \"\"}`, rating, result => {\n                    internalSetDirty(false)\n                    forceRefresh(refresh + 1)\n                }, err => {\n                    window.alert(\"Problem submitting rating to API, see developer console for more.\")\n                })\n                setSubmitted(true)\n            }}/>}\n        </div>}\n    </div>\n}","import \"./AxisEditor.css\"\nimport RatingSlider from \"./RatingSlider\"\nimport {useState, useEffect, useRef} from \"react\"\nimport {useImmer} from \"use-immer\";\nimport {getUrl} from \"./utils\";\n\nexport default function AxisEditor({axis, onSubmit}) {\n    const [axisData, setAxisData] = useImmer(axis)\n    const [value, setValue] = useState(0)\n    const [rateableUsers, setRateableUsers] = useState([])\n    const audienceInput = useRef()\n    const [submitted, setSubmitted] = useState(false)\n\n    useEffect(() => {\n        if (axisData.id !== axis.id) {\n            setAxisData(draft => axis)\n            setSubmitted(false)\n        }\n    }, [axis, setAxisData])\n\n    useEffect(() => getUrl(\"api/v1/people?rateable=true\", (users) => setRateableUsers(users)), [])\n\n    function lookupValue() {\n        const point = axisData.referencePoints.find(refPoint => refPoint.rating === value)\n        return point ? point.description : \"\"\n    }\n\n    const inUseGroups = Array.from(new Set(rateableUsers.flatMap(user => user.groups))).filter(a => a.indexOf(\"@\") < 0)\n    inUseGroups.sort()\n\n    if (submitted) {\n        return <div className=\"AxisEditor\">\n            <p>Thank you for submitting your axis.</p>\n        </div>\n    }\n\n    return <div className=\"AxisEditor\" key={axisData.id || \"new-axis\"}>\n        <div>\n            <label htmlFor=\"name\">Axis Name</label> <input id=\"name\" type=\"text\" defaultValue={axisData.name} onChange={(event) => {\n                setAxisData(draft => {draft.name = event.target.value})\n            }}></input>\n        </div>\n        <div>\n            <label htmlFor=\"catgegory\">Category</label> <input id=\"category\" type=\"text\" defaultValue={axisData.category} onChange={(event) => {\n                setAxisData(draft => {draft.category = event.target.value})\n            }}></input>\n        </div>\n        <div>\n            <label htmlFor=\"description\">Description</label> <input id=\"description\" type=\"text\" defaultValue={axisData.description} onChange={(event) => {\n                setAxisData(draft => {draft.description = event.target.value})\n            }}></input>\n        </div>\n        <div>\n            <label htmlFor=\"active\">Active</label> <input id=\"active\" type=\"checkbox\" defaultChecked={axisData.active} onChange={(event) => {\n                setAxisData(draft => {draft.active = event.target.checked})\n            }}></input>\n        </div>\n        <div>\n            <label>Audience</label>\n            <div className=\"audienceSetting\">\n                <ul>\n                    {axisData.audience.map(group => <li key={group}>{group} <button onClick={() => {\n                        setAxisData(draft => {\n                            draft.audience = draft.audience.filter(a => a !== group)\n                        })\n                    }}>x</button></li>)}\n                </ul>\n                <p>Groups currently assigned to users: {inUseGroups.map(a => <><span className=\"group\" key={\"span-\" + a} onClick={() => audienceInput.current.value = a}>{a}</span>, </>)}</p>\n                <p>You can also use email addresses to target individuals directly.</p>\n                Add group <input ref={audienceInput} type=\"text\" defaultValue=\"everyone\"></input>\n                <button onClick={() => {\n                    setAxisData(draft => {\n                        const group = audienceInput.current.value\n                        draft.audience = draft.audience.filter(a => a !== group)\n                        draft.audience.push(group)\n                    })\n                }}>Add</button> to the audience for this axis.\n            </div>\n        </div>\n\n        <p>When defining general anchor points, and it makes sense to do so, aim for Grad at level 5,\n            Junior at level 10, Engineer at level 25, Senior at 45, Lead at 65, Principal/Architect at 85,\n            World expert 95. Ideally, the skills come in a little before the levels\n            (e.g. 5/10/20/40/60/80/95), so that people have chance to practice before they get promoted.</p>\n\n        <section className=\"rating\">\n            <RatingSlider value={value} axis={axisData} editor={true} onAfterChange={newValue => setValue(Math.round(newValue))}></RatingSlider>\n        </section>\n\n        <div>\n            <label htmlFor=\"anchorvalue\">Anchor Value</label> <input id=\"anchorvalue\" readOnly={true} type=\"number\" value={value}></input>\n        </div>\n        <div>\n            <label htmlFor=\"anchortext\">Text</label> <input id=\"anchortext\" type=\"text\" value={lookupValue()} onChange={(event) => {\n                setAxisData(draft => {\n                    let point = draft.referencePoints.find(refPoint => refPoint.rating === value)\n                    if (!point) {\n                        point = {rating: value}\n                        draft.referencePoints.push(point)\n                    }\n                    point.description = event.target.value\n                })\n            }}></input>\n            <button onClick={() => {\n                setAxisData(draft => {\n                    const index = draft.referencePoints.findIndex(refPoint => refPoint.rating === value)\n                    if (index >= 0) {\n                        draft.referencePoints.splice(index, 1)\n                    }\n                })\n            }}>x</button>\n        </div>\n        {onSubmit ? <section className=\"submitSection\">\n            <button onClick={() => {\n                onSubmit(axisData)\n                setSubmitted(true)\n            }}>Submit Axis</button>\n        </section> : <></>}\n    </div>\n}","import React, {useEffect, useState} from 'react'\n\nimport \"./AxisPanel.css\"\nimport AxisEditor from \"./AxisEditor\";\nimport {getUrl, postPromise} from \"./utils\";\n\nexport default function AxisPanel() {\n    const [axes, setAxes] = useState([])\n    const [selectedAxis, setSelectedAxis] = useState(undefined)\n\n    useEffect(() => getUrl('api/v1/axes?active=true', setAxes, err => window.alert(\"Problem getting the active axes from the API\")), [setAxes])\n\n    return <div className=\"AxisPanel\">\n            <div className={selectedAxis ? \"AxisTable\" : \"AxisTable noSelection\"}>\n                <table>\n                    <tbody>\n                    <tr>\n                        <td>\n                            <button onClick={() => setSelectedAxis(\n                                {name: \"New Axis\", category: \"Category\", description: \"A description\", audience: [], referencePoints: []}\n                            )}>Create</button>\n                        </td><td>Create New Axis</td><td></td><td></td>\n                    </tr>\n                        {axes.map(axis => <tr key={axis.name}>\n                            <td><button onClick={() => setSelectedAxis(axis)}>Edit</button> </td>\n                            <td>{axis.name}</td><td>{axis.category}</td><td>{axis.description}</td>\n                            <td>{axis.active ? \"✔️\" : \"❌\"}</td>\n                        </tr>)}\n                    </tbody>\n                </table>\n            </div>\n        {selectedAxis ? <AxisEditor axis={selectedAxis} onSubmit={(axis) => {\n        postPromise(`api/v1/axes${axis.id ? (\"/\"+axis.id) : \"\"}`, axis).then(result => {\n            if (result.status !== 200) {\n                console.error(\"Problem submitting axis\", result)\n                window.alert(\"Problem submitting axis, see developer console.\")\n            } else {\n                console.log('Submitted', result)\n            }\n        }).catch(err => {\n            console.error(err)\n            window.alert(\"Problem submitting axis, see developer console.\")\n        })\n    }}>\n\n        </AxisEditor> : <></>}\n    </div>\n}","import \"./App.css\"\nimport React, {useEffect, useState} from \"react\"\nimport {Tab, TabList, TabPanel, Tabs} from 'react-tabs'\nimport './react-tabs.css'\nimport {getUrl} from \"./utils\"\nimport NewRatingPanel from \"./NewRatingPanel\"\nimport ViewRatingPanel from \"./ViewRatingPanel\"\nimport TeamRate from \"./TeamRate\"\nimport AxisPanel from \"./AxisPanel\"\nimport {config} from \"./config\"\n\nfunction App() {\n    console.info(\"Hi, thanks for trying out this appraisal system.\\nI apologise for any problems you might be having with it.\\nPlease contact Adam Iley on hangouts and show me any problems.\")\n\n    const [me, setMe] = useState(undefined)\n    const [people, setPeople] = useState(undefined)\n    const [isDirty, setIsDirty] = useState(false)\n\n    useEffect(() => getUrl(\"profile\", setMe, (_err) => window.alert(\"Problem getting the logged in users profile\")), [setMe])\n\n    useEffect(() => getUrl(`api/v1/people?rateable=true`, setPeople, (_err) => {\n        window.alert(\"Problem getting the rateable people from the API.\")\n    }), [setPeople])\n\n    useEffect(() => {\n        const unloadListener = (event) => {\n            if (isDirty) {\n                event.preventDefault()\n                return event.returnValue = \"Do you want to leave this page - this will discard your rating.\"\n            }\n            return null\n        }\n        window.addEventListener('beforeunload', unloadListener, {capture: true});\n        return () => {\n            window.removeEventListener('beforeunload', unloadListener, {capture: true});\n        }\n    }, [isDirty])\n\n    return (!me || !people) ? (\n        <div>Loading...</div>\n    ) : ( me.status === 'not-logged-in' ? (\n        <div>\n            <p>You are not logged in.  Please go to the <a href={`${config.apiServer}/login`}>login page</a>.</p>\n        </div>\n    ) : (\n        <div className=\"App\">\n            <div className=\"appHeader\">\n                Welcome {me.name}\n            </div>\n            <Tabs className=\"appTabs\" onSelect={(_index, _lastIndex, _event) => {\n                    if (isDirty) {\n                        if (window.confirm(\"Discard these changes?\")) {\n                            setIsDirty(false)\n                            return true\n                        }\n                        return false\n                    }\n                }}>\n                <TabList>\n                    <Tab>Rate Someone</Tab>\n                    <Tab>Rate My Team</Tab>\n                    <Tab>View Ratings</Tab>\n                    {me.groups.indexOf(\"lm\") >= 0 ? <Tab>Axis Editor</Tab> : <></>}\n                </TabList>\n                <TabPanel>\n                    <NewRatingPanel people={people} setDirty={setIsDirty}></NewRatingPanel>\n                </TabPanel>\n                <TabPanel>\n                    <TeamRate me={me} people={people} setDirty={setIsDirty}></TeamRate>\n                </TabPanel>\n                <TabPanel>\n                    <ViewRatingPanel people={people} setDirty={setIsDirty}></ViewRatingPanel>\n                </TabPanel>\n                <TabPanel>\n                    {me.groups.indexOf(\"lm\") >= 0 ? <AxisPanel></AxisPanel> : <></>}\n                </TabPanel>\n            </Tabs>\n        </div>\n    ))\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}